/*
 * PB_Glucose_uartMsg.h
 *
 *  Created on: 2019. 8. 27.
 *      Author: backp
 */

#ifndef UARTMSG_H_
#define UARTMSG_H_


#define	UART_MSG_LEN				8
#define MAX_UART_WAIT_CNT			100

#define UART_MSG_POS_START_DESC		0x00
#define UART_MSG_POS_STX			0x01
#define UART_MSG_POS_TYPE			0x02
#define UART_MSG_POS_DATA_1			0x03
#define UART_MSG_POS_DATA_2			0x04
#define UART_MSG_POS_DATA_3			0x05
#define UART_MSG_POS_ETX			0x06
#define UART_MSG_POS_END_DESC		0x07

#define UART_MSG_DATA_START			0xAA
#define UART_MSG_DATA_STX			0xA3
#define UART_MSG_DATA_ETX			0xA4
#define UART_MSG_DATA_END			0x55

#define UART_STATE_WAIT				0x01
#define UART_STATE_END				0x02


#define PRINT_LCD_NUMBER_X_RIGHT	12
#define PRINT_LCD_NUMBER_X_MIDDLE	7
#define PRINT_LCD_NUMBER_Y_BOTTOM	32

 //Msg Type
enum
{
	UART_MSG_TYPE_ACK = 0x01,
	UART_MSG_TYPE_NACK,
	UART_MSG_TYPE_GLUCOSE_START_REQ,
	UART_MSG_TYPE_MEALS_STATE,
	UART_MSG_TYPE_STRIP_CODE,
	UART_MSG_TYPE_INSERT_BLOOD_DISPLAY_REQ,
	UART_MSG_TYPE_BLOOD_INJECT_WAIT,
	UART_MSG_TYPE_COUNT_DISPLAY_REQ,
	UART_MSG_TYPE_GLUCOSE_RESULT,
	UART_MSG_TYPE_GLUCOSE_END_REQ,
	UART_MSG_TYPE_ERROR_STATE,
	UART_MSG_TYPE_ASK_RE_WRITE,
	UART_MSG_TYPE_NRD_ERROR,

	//ADC TEST
	UART_MSG_TYPE_ADC_VALUE,
	UART_MSG_TYPE_TEMP_VALUE,

	UART_MSG_MAX_LEN,
};

//Error Type
enum
{
	UART_MSG_DATA_ERROR_USED_STRIP = 0x01,
	UART_MSG_DATA_ERROR_TEMPERATURE,				//Temperature Error
	UART_MSG_DATA_ERROR_BLOOD_AMOUNT,				//Blood Amount Error
	UART_MSG_DATA_ERROR_RES_HI,
	UART_MSG_DATA_ERROR_RES_LO,
	UART_MSG_DATA_ERROR_TIMEOUT,
	UART_MSG_DATA_ERROR_STRIP_OUT_STATE,
	UART_MSG_DATA_ERROR_INVALID_STATE,
	UART_MSG_DATA_ERROR_INVALID_MSG,
	UART_MSG_DATA_ERROR_MSG_ERROR,
	UART_MSG_DATA_ERROR_ADC_ERROR,
	UART_MSG_DATA_ERROR_STRIP_CODE,
	UART_MSG_DATA_ERROR_MAX,
};

//Glucose Result Error
enum
{
	UART_MSG_DATA_GLUCOSE_RESULT_SUCCESS = 0x00,
	UART_MSG_DATA_GLUCOSE_RESULT_RES_HI,
	UART_MSG_DATA_GLUCOSE_RESULT_RES_LO,
};

//Glucose Wait Count
enum
{
	//	UART_MSG_DATA_WAIT_COUNT_START = 0x00,
	UART_MSG_DATA_WAIT_COUNT_01 = 0x00,
	UART_MSG_DATA_WAIT_COUNT_02,
	UART_MSG_DATA_WAIT_COUNT_03,
	UART_MSG_DATA_WAIT_COUNT_04,
	UART_MSG_DATA_WAIT_COUNT_05
};

//Glucose Meals State
enum
{
	UART_MSG_DATA_BEFORE_MEALS = 0x01,
	UART_MSG_DATA_AFTER_MEALS,
};



#endif /* APPLICATION_PAARBAND_EXE_PAARBAND_SRC_PB_GLUCOSE_UART_H_ */
